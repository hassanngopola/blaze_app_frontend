{"remainingRequest":"/home/cranberry/Desktop/create/hsms-client/node_modules/babel-loader/lib/index.js!/home/cranberry/Desktop/create/hsms-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cranberry/Desktop/create/hsms-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cranberry/Desktop/create/hsms-client/src/components/forms/VitalsForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cranberry/Desktop/create/hsms-client/src/components/forms/VitalsForm.vue","mtime":1613115644887},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG1vZGVsRmFjdG9yeSBmcm9tICJAL3NlcnZpY2VzL3Jlc291cmNlcy9yZXNvdXJjZUZhY3RvcnkuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlZpdGFsc0Zvcm0iLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB7CiAgICAgICAgYWxsb2NhdGlvbl9pZDogdGhpcy5hbGxvY2F0aW9uX2lkLAogICAgICAgIHBhdGllbnRfaWQ6IHRoaXMucGF0aWVudF9pZCwKICAgICAgICB3ZWlnaHQ6IDAsCiAgICAgICAgaGVpZ2h0OiAwLAogICAgICAgIEJQOiAwLAogICAgICAgIHRlbXBlcmF0dXJlOiAwCiAgICAgIH0KICAgIH07CiAgfSwKICBwcm9wczogWydhbGxvY2F0aW9uX2lkJywgJ3BhdGllbnRfaWQnLCAncGF0aWVudF9maXJzdF9uYW1lJywgJ3BhdGllbnRfbGFzdF9uYW1lJ10sCiAgbWV0aG9kczogewogICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgZW5jb3VudGVyID0gbW9kZWxGYWN0b3J5LmdldCgnZW5jb3VudGVycycpOwogICAgICBlbmNvdW50ZXIuYWRkKHRoaXMuZm9ybSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy4kZGlhbG9ncy5hbGVydCgiVml0YWxzIGhhdmUgYmVlbiBzYXZlZCEiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgIH0pOwoKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CgogICAgICAgIF90aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICBwYXRoOiAnL2FsbG9jYXRpb25zJwogICAgICAgIH0pOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgdmFyIHN0YXR1cyA9IGVyci5yZXNwb25zZS5zdGF0dXM7CiAgICAgICAgdmFyIG1lc3NhZ2UgPSBlcnIucmVzcG9uc2UuZGF0YS5kYXRhOwoKICAgICAgICBfdGhpcy4kZGlhbG9ncy5hbGVydChtZXNzYWdlLCB7CiAgICAgICAgICB0aXRsZTogc3RhdHVzLAogICAgICAgICAgc2l6ZTogInNtIgogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["VitalsForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,YAAA,MAAA,yCAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,aAAA,EAAA,KAAA,aADA;AAEA,QAAA,UAAA,EAAA,KAAA,UAFA;AAGA,QAAA,MAAA,EAAA,CAHA;AAIA,QAAA,MAAA,EAAA,CAJA;AAKA,QAAA,EAAA,EAAA,CALA;AAMA,QAAA,WAAA,EAAA;AANA;AADA,KAAA;AAUA,GAbA;AAcA,EAAA,KAAA,EAAA,CAAA,eAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,mBAAA,CAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,GADA,iBACA;AAAA;;AACA,UAAA,SAAA,GAAA,YAAA,CAAA,GAAA,CAAA,YAAA,CAAA;AACA,MAAA,SAAA,CAAA,GAAA,CAAA,KAAA,IAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,KAAA,4BACA,IADA,CACA,UAAA,GAAA;AAAA,iBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,SADA;;AAEA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA,OANA,EAMA,KANA,CAMA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,GAAA,GAAA,CAAA,QAAA,CAAA,MAAA;AACA,YAAA,OAAA,GAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA;;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,EAAA;AAAA,UAAA,KAAA,EAAA,MAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,EACA,IADA,CACA,UAAA,GAAA;AAAA,iBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,SADA;AAEA,OAXA;AAYA;AAfA;AAfA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"card\">\n            <div class=\"card-header\">Vitals for: <b>{{patient_first_name}} {{patient_last_name}}</b></div>\n        <div class=\"card-body\">\n            <form @submit=\"add()\">\n                <label for=\"sb-wrap\">Weight(Kgs)</label>\n                <b-form-spinbutton v-model=\"form.weight\" id=\"sb-wrap\" wrap min=\"1\" max=\"500\" placeholder=\"--\"></b-form-spinbutton>\n                \n                <label for=\"sb-wrap\">Temperature (Degrees)</label>\n                <b-form-spinbutton v-model=\"form.temperature\" id=\"sb-wrap\" wrap min=\"1\" max=\"100\" placeholder=\"--\"></b-form-spinbutton>\n\n                <label for=\"sb-wrap\">Height (cm)</label>\n                <b-form-spinbutton v-model=\"form.height\" id=\"sb-wrap\" wrap min=\"1\" max=\"250\" placeholder=\"--\"></b-form-spinbutton>\n\n                <label for=\"sb-wrap\">Blood Pressure</label>\n                <b-form-spinbutton v-model=\"form.BP\" id=\"sb-wrap\" wrap min=\"1\" max=\"250\" placeholder=\"--\"></b-form-spinbutton>\n                <p/>\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>  \n        </div>  \n    </div>\n</template>\n\n<script>\nimport modelFactory from \"@/services/resources/resourceFactory.js\";\nexport default {\n    name: \"VitalsForm\",\n    data(){\n        return {\n            form: {\n                allocation_id: this.allocation_id,\n                patient_id: this.patient_id,\n                weight: 0,\n                height: 0,\n                BP: 0,\n                temperature: 0\n            }\n        }\n    },\n    props: ['allocation_id', 'patient_id', 'patient_first_name', 'patient_last_name'],\n    methods: {\n        add(){\n            const encounter = modelFactory.get('encounters');\n            encounter.add(this.form)\n                    .then(response => {\n                        this.$dialogs.alert(`Vitals have been saved!`)\n                                .then(res => console.log(res))\n                            console.log(response);\n                        this.$router.push({path:'/allocations'});    \n                    }).catch(err => {\n                        const status = err.response.status;\n                        const message = err.response.data.data;\n                        this.$dialogs.alert(message,{title:status, size:\"sm\"})\n                                .then(res => console.log(res))\n                    })\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components/forms"}]}