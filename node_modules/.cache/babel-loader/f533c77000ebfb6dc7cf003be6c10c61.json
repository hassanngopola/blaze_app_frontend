{"remainingRequest":"/home/cranberry/Desktop/create/hsms-client/node_modules/babel-loader/lib/index.js!/home/cranberry/Desktop/create/hsms-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cranberry/Desktop/create/hsms-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cranberry/Desktop/create/hsms-client/src/components/forms/UserForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cranberry/Desktop/create/hsms-client/src/components/forms/UserForm.vue","mtime":1613115644887},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG1vZGVsRmFjdG9yeSBmcm9tICJAL3NlcnZpY2VzL3Jlc291cmNlcy9yZXNvdXJjZUZhY3RvcnkuanMiOwppbXBvcnQgeyBlbWFpbCwgcmVxdWlyZWQsIG1pbkxlbmd0aCB9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVXNlckZvcm0iLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB7CiAgICAgICAgZmlyc3RfbmFtZTogIiIsCiAgICAgICAgbGFzdF9uYW1lOiAiIiwKICAgICAgICB1c2VybmFtZTogIiIsCiAgICAgICAgcGFzc3dvcmQ6ICIiLAogICAgICAgIGRhdGVfb2ZfYmlydGg6ICIiLAogICAgICAgIGVtYWlsOiAiIiwKICAgICAgICByb2xlX2lkOiAwLAogICAgICAgIHJvbGVzOiBbXQogICAgICB9LAogICAgICByZXNwb25zZUVycm9yczogW10KICAgIH07CiAgfSwKICB2YWxpZGF0aW9uczogewogICAgZm9ybTogewogICAgICBmaXJzdF9uYW1lOiB7CiAgICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkLAogICAgICAgIG1pbkxlbmd0aDogbWluTGVuZ3RoKDQpCiAgICAgIH0sCiAgICAgIGxhc3RfbmFtZTogewogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICBtaW5MZW5ndGg6IG1pbkxlbmd0aCg0KQogICAgICB9LAogICAgICBkYXRlX29mX2JpcnRoOiB7CiAgICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkCiAgICAgIH0sCiAgICAgIGVtYWlsOiB7CiAgICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkLAogICAgICAgIGVtYWlsOiBlbWFpbAogICAgICB9LAogICAgICB1c2VybmFtZTogewogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICBtaW5MZW5ndGg6IG1pbkxlbmd0aCg0KQogICAgICB9LAogICAgICBwYXNzd29yZDogewogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICBtaW5MZW5ndGg6IG1pbkxlbmd0aCg4KQogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLiR2LiR0b3VjaCgpOwoKICAgICAgaWYgKHRoaXMuJHYuJGludmFsaWQpIHsKICAgICAgICB0aGlzLiRkaWFsb2dzLmFsZXJ0KCJQbGVhc2UgY29ycmVjdCBlcnJvcnMhIiwgewogICAgICAgICAgdGl0bGU6ICdFcnJvcicsCiAgICAgICAgICBzaXplOiAic20iCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2cocmVzKTsKICAgICAgICB9KTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHZhciB1c2VyTW9kZWwgPSBtb2RlbEZhY3RvcnkuZ2V0KCd1c2VycycpOwogICAgICB1c2VyTW9kZWwuYWRkKHRoaXMuZm9ybSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy4kZGlhbG9ncy5hbGVydCgiIi5jb25jYXQoX3RoaXMuZm9ybS51c2VybmFtZSwgIiBoYXMgYmVlbiByZWdpc3RlcmVkISIpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgIH0pOwoKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICB2YXIgc3RhdHVzID0gZXJyLnJlc3BvbnNlLnN0YXR1czsKICAgICAgICB2YXIgbWVzc2FnZXMgPSBlcnIucmVzcG9uc2UuZGF0YS5kYXRhIHx8IHt9OwoKICAgICAgICBfdGhpcy4kZGlhbG9ncy5hbGVydChtZXNzYWdlcywgewogICAgICAgICAgdGl0bGU6IHN0YXR1cywKICAgICAgICAgIHNpemU6ICJzbSIKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICB2YXIgcm9sZU1vZGVsID0gbW9kZWxGYWN0b3J5LmdldCgncm9sZXMnKTsKICAgIHJvbGVNb2RlbC5pbmRleCgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIF90aGlzMi5mb3JtLnJvbGVzID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["UserForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n    <div class=\"card\">\n    <div class=\"card-header\">\n        Register User    \n    </div>   \n    <div class=\"card-body\">\n        <form v-on:submit.prevent v-on:submit=\"register()\" >\n        \n        <div class=\"form-group\" :class=\"{ 'form-group--error': $v.form.first_name.$error }\">\n        <label for=\"first_name\">Firstname:</label>\n         <input type=\"text\" v-model.trim=\"$v.form.first_name.$model\" class=\"form__input form-control\" id=\"first_name\" placeholder=\"Enter Firstname\">\n         <small class=\"error\" v-if=\"!$v.form.first_name.required\">Field is required</small>\n         <small class=\"error\" v-if=\"!$v.form.first_name.minLength\">Firstname must have at least {{$v.form.first_name.$params.minLength.min}} letters.</small>\n        </div>\n\n        <div class=\"form-group\" :class=\"{ 'form-group--error': $v.form.last_name.$error }\">\n        <label for=\"last_name\">Lastname:</label>\n         <input type=\"text\" v-model.trim=\"$v.form.last_name.$model\" class=\"form__input form-control\" id=\"first_name\" placeholder=\"Enter Lastname\">\n         <small class=\"error\" v-if=\"!$v.form.last_name.required\">Field is required</small>\n         <small class=\"error\" v-if=\"!$v.form.last_name.minLength\">Lastname must have at least {{$v.form.last_name.$params.minLength.min}} letters.</small>\n        </div>\n\n        <div class=\"form-group\" :class=\"{ 'form-group--error': $v.form.username.$error }\">\n        <label for=\"username\">Username:</label>\n         <input type=\"text\" v-model.trim=\"$v.form.username.$model\" class=\"form__input form-control\" id=\"username\" placeholder=\"Enter username\">\n         <small class=\"error\" v-if=\"!$v.form.username.required\">Field is required</small>\n         <small class=\"error\" v-if=\"!$v.form.username.minLength\">Username must have at least {{$v.form.username.$params.minLength.min}} letters.</small>\n        </div>\n\n        <div class=\"form-group\" :class=\"{ 'form-group--error': $v.form.date_of_birth.$error }\">\n        <label for=\"date_of_birth\">Date of birth:</label>\n        <b-form-datepicker v-model.trim=\"$v.form.date_of_birth.$model\" id=\"example-datepicker\" class=\"mb-2\"></b-form-datepicker>\n        <small class=\"error\" v-if=\"!$v.form.date_of_birth.required\">Field is required</small>\n        </div>\n        \n        <div class=\"form-group\" :class=\"{'form-group--error': $v.form.email.$error }\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" v-model.trim=\"$v.form.email.$model\" class=\"form__input form-control\" id=\"email\" placeholder=\"Enter email\">\n        <small class=\"error\" v-if=\"!$v.form.email.email\">Invalid Email</small>\n        <small class=\"error\" v-if=\"!$v.form.email.required\">Field is required</small>\n        </div>\n\n        <div class=\"form-group\">\n        <label for=\"roles\">Role:</label>\n        <select id =\"roles\" v-model=\"form.role_id\" class=\"form__input form-control\" required> \n            <option v-for=\"role in form.roles\" :key=\"role.id\" :value=\"role.id\"> {{role.role_name}}</option>\n        </select>\n        </div>\n\n        <div class=\"form-group\" :class=\"{ 'form-group--error': $v.form.password.$error }\">\n        <label for=\"pwd\">Password:</label>\n        <input type=\"password\" v-model.trim=\"$v.form.password.$model\" class=\"form__input form-control\" placeholder=\"*******\" >\n        <small class=\"error\" v-if=\"!$v.form.password.required\">Field is required</small>\n        <small class=\"error\" v-if=\"!$v.form.password.minLength\">Password must have at least {{$v.form.password.$params.minLength.min}} letters.</small>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n        </form>\n        </div>\n    </div>\n</div>\n</template>\n<script>\nimport modelFactory from \"@/services/resources/resourceFactory.js\";\nimport { email, required, minLength } from 'vuelidate/lib/validators';\nexport default {\n    name: \"UserForm\",\n    data(){\n        return {\n            form: {\n                first_name: \"\",\n                last_name: \"\",\n                username: \"\",\n                password: \"\",\n                date_of_birth:\"\",\n                email: \"\",\n                role_id: 0,\n                roles: []\n            },\n            responseErrors:[]\n        }\n    },\n    validations: {\n        form: {\n            first_name : {\n                required,\n                minLength: minLength(4)\n            },\n            last_name : {\n                required,\n                minLength: minLength(4)\n            },\n            date_of_birth: {\n                required\n            },\n             email: {\n                 required,\n                 email\n             },\n             username: {\n                 required,\n                 minLength: minLength(4)\n            },\n            password: {\n                required,\n                minLength: minLength(8)\n            }\n        }    \n    },\n    methods: {\n        register(){\n            this.$v.$touch()\n            if (this.$v.$invalid) { \n                this.$dialogs.alert(\"Please correct errors!\",{title:'Error', size:\"sm\"})\n                            .then(res => console.log(res))\n                return \n            }\n            const userModel = modelFactory.get('users');\n            userModel.add(this.form)\n                    .then(response => {\n                        this.$dialogs.alert(`${this.form.username} has been registered!`)\n                            .then(res => console.log(res))\n                        console.log(response);\n                    }).catch(err => {\n                        const status = err.response.status;\n                        const messages = err.response.data.data || {};\n                        this.$dialogs.alert(messages,{title:status, size:\"sm\"})\n                               .then(res => console.log(res));\n                        \n                    })\n        }\n    },\n    mounted() {\n        const roleModel = modelFactory.get('roles');\n            roleModel.index().then(response => {\n                 this.form.roles = response.data.data\n        });\n    }\n}\n</script>"],"sourceRoot":"src/components/forms"}]}