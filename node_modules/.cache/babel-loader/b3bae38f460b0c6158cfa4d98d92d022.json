{"remainingRequest":"/home/cranberry/Desktop/create/Blaze-app/node_modules/babel-loader/lib/index.js!/home/cranberry/Desktop/create/Blaze-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cranberry/Desktop/create/Blaze-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cranberry/Desktop/create/Blaze-app/src/components/forms/AllocationForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cranberry/Desktop/create/Blaze-app/src/components/forms/AllocationForm.vue","mtime":1613115644887},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG1vZGVsRmFjdG9yeSBmcm9tICJAL3NlcnZpY2VzL3Jlc291cmNlcy9yZXNvdXJjZUZhY3RvcnkuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFsbG9jYXRpb25Gb3JtIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZm9ybTogewogICAgICAgIGFzc2lnbmVkX3RvOiAwLAogICAgICAgIHByaW9yaXR5OiAiTm9ybWFsIiwKICAgICAgICBhbGxvY2F0aW9uX2RhdGU6ICIiLAogICAgICAgIHBhdGllbnRfaWQ6IHRoaXMucGF0aWVudF9pZAogICAgICB9LAogICAgICBwcmlvcml0aWVzOiB7CiAgICAgICAgIk5vcm1hbCI6ICJOb3JtYWwiLAogICAgICAgICJFbWVyZ2VuY3kiOiAiRW1lcmdlbmN5IgogICAgICB9LAogICAgICBwYXRpZW50czogW10sCiAgICAgIHVzZXJzOiBbXQogICAgfTsKICB9LAogIHByb3BzOiBbJ3BhdGllbnRfaWQnLCAncGF0aWVudF9maXJzdF9uYW1lJywgJ3BhdGllbnRfbGFzdF9uYW1lJ10sCiAgbWV0aG9kczogewogICAgZ2V0VXNlcnM6IGZ1bmN0aW9uIGdldFVzZXJzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHVzZXJzID0gbW9kZWxGYWN0b3J5LmdldCgndXNlcnMnKTsKICAgICAgdXNlcnMuaW5kZXgoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLnVzZXJzID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRQYXRpZW50czogZnVuY3Rpb24gZ2V0UGF0aWVudHMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIHBhdGllbnRzID0gbW9kZWxGYWN0b3J5LmdldCgncGF0aWVudHMnKTsKICAgICAgcGF0aWVudHMuaW5kZXgoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMi5wYXRpZW50cyA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICBjb25zb2xlLmxvZyhfdGhpczIucGF0aWVudHMpOwogICAgICB9KTsKICAgIH0sCiAgICBvblBlcnNvbmVsQ2hlY2tlZDogZnVuY3Rpb24gb25QZXJzb25lbENoZWNrZWQoaWQpIHsKICAgICAgdGhpcy5mb3JtLmFzc2lnbmVkX3RvID0gaWQ7CiAgICB9LAogICAgYWxsb2NhdGU6IGZ1bmN0aW9uIGFsbG9jYXRlKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5mb3JtLmFzc2lnbmVkX3RvKSB7CiAgICAgICAgdGhpcy4kZGlhbG9ncy5hbGVydCgiUGxlYXNlIHNlbGVjdCBhIG1lZGljYWwgcGVyc29uZWwiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBhbGxvY2F0aW9uID0gbW9kZWxGYWN0b3J5LmdldCgnYWxsb2NhdGlvbnMnKTsKICAgICAgICBhbGxvY2F0aW9uLmFkZCh0aGlzLmZvcm0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBfdGhpczMuJGRpYWxvZ3MuYWxlcnQoIlBhdGllbnQgYWxsb2NhdGlvbiBzdWNjZXNzZnVsIikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgICAgfSk7CgogICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgIHZhciBzdGF0dXMgPSBlcnIucmVzcG9uc2Uuc3RhdHVzOwogICAgICAgICAgdmFyIG1lc3NhZ2UgPSBlcnIucmVzcG9uc2UuZGF0YS5kYXRhOwoKICAgICAgICAgIF90aGlzMy4kZGlhbG9ncy5hbGVydChtZXNzYWdlLCB7CiAgICAgICAgICAgIHRpdGxlOiBzdGF0dXMsCiAgICAgICAgICAgIHNpemU6ICJzbSIKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2cocmVzKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRVc2VycygpOwogICAgdGhpcy5nZXRQYXRpZW50cygpOwogIH0KfTs="},{"version":3,"sources":["AllocationForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,OAAA,YAAA,MAAA,yCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,WAAA,EAAA,CADA;AAEA,QAAA,QAAA,EAAA,QAFA;AAGA,QAAA,eAAA,EAAA,EAHA;AAIA,QAAA,UAAA,EAAA,KAAA;AAJA,OADA;AAOA,MAAA,UAAA,EAAA;AACA,kBAAA,QADA;AAEA,qBAAA;AAFA,OAPA;AAWA,MAAA,QAAA,EAAA,EAXA;AAYA,MAAA,KAAA,EAAA;AAZA,KAAA;AAcA,GAjBA;AAkBA,EAAA,KAAA,EAAA,CAAA,YAAA,EAAA,oBAAA,EAAA,mBAAA,CAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,UAAA,KAAA,GAAA,YAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,OAFA;AAGA,KANA;AAOA,IAAA,WAPA,yBAOA;AAAA;;AACA,UAAA,QAAA,GAAA,YAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AACA,MAAA,QAAA,CAAA,KAAA,GAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,QAAA;AACA,OAHA;AAIA,KAbA;AAcA,IAAA,iBAdA,6BAcA,EAdA,EAcA;AACA,WAAA,IAAA,CAAA,WAAA,GAAA,EAAA;AACA,KAhBA;AAiBA,IAAA,QAjBA,sBAiBA;AAAA;;AACA,UAAA,CAAA,KAAA,IAAA,CAAA,WAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,qCACA,IADA,CACA,UAAA,GAAA;AAAA,iBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,SADA;AAEA,OAHA,MAGA;AACA,YAAA,UAAA,GAAA,YAAA,CAAA,GAAA,CAAA,aAAA,CAAA;AACA,QAAA,UAAA,CAAA,GAAA,CAAA,KAAA,IAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,KAAA,kCACA,IADA,CACA,UAAA,GAAA;AAAA,mBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,WADA;;AAEA,UAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,SALA,EAKA,KALA,CAKA,UAAA,GAAA,EAAA;AACA,cAAA,MAAA,GAAA,GAAA,CAAA,QAAA,CAAA,MAAA;AACA,cAAA,OAAA,GAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA;;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,EAAA;AAAA,YAAA,KAAA,EAAA,MAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA,EACA,IADA,CACA,UAAA,GAAA;AAAA,mBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,WADA;AAEA,SAVA;AAWA;AACA;AAnCA,GAnBA;AAwDA,EAAA,OAxDA,qBAwDA;AACA,SAAA,QAAA;AACA,SAAA,WAAA;AACA;AA3DA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"card\">\n            <div class=\"card-header\">Allocate patient: <b>{{patient_first_name}} {{patient_last_name}}</b></div>\n            <div class=\"card-body\">\n                <form v-on:submit.prevent v-on:submit=\"allocate()\">\n                    <div class=\"form-group\">\n                        <label for=\"prioties\">Priorities:</label>\n                        <select id=\"priorities\" class=\"form-control\" v-model=\"form.priority\">\n                            <option v-for=\"(priority, id) in priorities\" :key=\"id\" :value=\"id\">{{priority}}</option>\n                        </select>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"example-datepicker\">Appointment Date</label>\n                        <b-form-datepicker id=\"example-datepicker\" v-model=\"form.allocation_date\" class=\"mb-2\"></b-form-datepicker>\n                    </div>\n                    <p/>\n                    <div class=\"selection_list\">\n                        <b>Select user:</b>\n                        <p/>\n                        <table class=\"table table-striped table-sm\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">Assign</th>\n                            <th scope=\"col\">Username</th>\n                            <th scope=\"col\">Phonenumber</th>\n                            <th scope=\"col\">Role</th>\n                            <th scope=\"col\">Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"(user, id) in users\" :key=\"id\">\n                            <td> <input type=\"radio\" name=\"user\" @click=\"onPersonelChecked(user.id)\"/> </td>   \n                            <td>{{user.username}}</td>\n                            <td>{{user.email}}</td> \n                            <td>{{user.role_name}}</td>\n                            <td>{{user.status}}</td>\n                            </tr>\n                        </tbody>\n                        </table>\n                    </div>\n                    \n                    <button type=\"submit\" class=\"btn btn-primary\">Allocate</button>\n                </form>\n            </div>\n        </div>\n    </div>    \n</template>\n\n<script>\nimport modelFactory from \"@/services/resources/resourceFactory.js\";\n\nexport default {\n    name: \"AllocationForm\",\n    data(){\n        return {\n            form: {\n                assigned_to: 0,\n                priority: \"Normal\",\n                allocation_date: \"\",\n                patient_id: this.patient_id\n            },\n            priorities: {\n                \"Normal\" : \"Normal\",\n                \"Emergency\": \"Emergency\"\n            },\n            patients: [],\n            users: []\n        }\n    },\n    props: ['patient_id', 'patient_first_name', 'patient_last_name'],\n    methods:{\n        getUsers(){\n            const users = modelFactory.get('users');\n            users.index().then(response =>{\n                this.users = response.data.data\n            })\n        },\n        getPatients(){\n            const patients = modelFactory.get('patients');\n            patients.index().then(response => {\n                this.patients = response.data.data\n                console.log(this.patients);\n            }) \n        },\n        onPersonelChecked(id){\n            this.form.assigned_to = id\n        },\n        allocate(){\n            if (!this.form.assigned_to){\n                this.$dialogs.alert(`Please select a medical personel`)\n                    .then(res => console.log(res))\n            }else{\n                const allocation = modelFactory.get('allocations');\n                allocation.add(this.form)\n                        .then(response => {\n                            this.$dialogs.alert(`Patient allocation successful`)\n                                .then(res => console.log(res))\n                            console.log(response);\n                        }).catch(err => {\n                            const status = err.response.status;\n                            const message = err.response.data.data;\n                            this.$dialogs.alert(message,{title:status, size:\"sm\"})\n                                .then(res => console.log(res))\n                        })\n            }\n        }\n    },\n    mounted(){\n        this.getUsers();\n        this.getPatients();\n    }\n}\n</script>\n<style scoped>\n    .selection_list{\n        height: 250px;\n        overflow-y: scroll;\n        align-content: center;\n    }\n</style>"],"sourceRoot":"src/components/forms"}]}