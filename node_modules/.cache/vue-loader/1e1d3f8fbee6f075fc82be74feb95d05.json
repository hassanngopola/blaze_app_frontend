{"remainingRequest":"/home/cranberry/Desktop/create/Blaze-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cranberry/Desktop/create/Blaze-app/src/components/forms/AllocationForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cranberry/Desktop/create/Blaze-app/src/components/forms/AllocationForm.vue","mtime":1613115644887},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtb2RlbEZhY3RvcnkgZnJvbSAiQC9zZXJ2aWNlcy9yZXNvdXJjZXMvcmVzb3VyY2VGYWN0b3J5LmpzIjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJBbGxvY2F0aW9uRm9ybSIsCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZm9ybTogewogICAgICAgICAgICAgICAgYXNzaWduZWRfdG86IDAsCiAgICAgICAgICAgICAgICBwcmlvcml0eTogIk5vcm1hbCIsCiAgICAgICAgICAgICAgICBhbGxvY2F0aW9uX2RhdGU6ICIiLAogICAgICAgICAgICAgICAgcGF0aWVudF9pZDogdGhpcy5wYXRpZW50X2lkCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHByaW9yaXRpZXM6IHsKICAgICAgICAgICAgICAgICJOb3JtYWwiIDogIk5vcm1hbCIsCiAgICAgICAgICAgICAgICAiRW1lcmdlbmN5IjogIkVtZXJnZW5jeSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcGF0aWVudHM6IFtdLAogICAgICAgICAgICB1c2VyczogW10KICAgICAgICB9CiAgICB9LAogICAgcHJvcHM6IFsncGF0aWVudF9pZCcsICdwYXRpZW50X2ZpcnN0X25hbWUnLCAncGF0aWVudF9sYXN0X25hbWUnXSwKICAgIG1ldGhvZHM6ewogICAgICAgIGdldFVzZXJzKCl7CiAgICAgICAgICAgIGNvbnN0IHVzZXJzID0gbW9kZWxGYWN0b3J5LmdldCgndXNlcnMnKTsKICAgICAgICAgICAgdXNlcnMuaW5kZXgoKS50aGVuKHJlc3BvbnNlID0+ewogICAgICAgICAgICAgICAgdGhpcy51c2VycyA9IHJlc3BvbnNlLmRhdGEuZGF0YQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgZ2V0UGF0aWVudHMoKXsKICAgICAgICAgICAgY29uc3QgcGF0aWVudHMgPSBtb2RlbEZhY3RvcnkuZ2V0KCdwYXRpZW50cycpOwogICAgICAgICAgICBwYXRpZW50cy5pbmRleCgpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgdGhpcy5wYXRpZW50cyA9IHJlc3BvbnNlLmRhdGEuZGF0YQogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5wYXRpZW50cyk7CiAgICAgICAgICAgIH0pIAogICAgICAgIH0sCiAgICAgICAgb25QZXJzb25lbENoZWNrZWQoaWQpewogICAgICAgICAgICB0aGlzLmZvcm0uYXNzaWduZWRfdG8gPSBpZAogICAgICAgIH0sCiAgICAgICAgYWxsb2NhdGUoKXsKICAgICAgICAgICAgaWYgKCF0aGlzLmZvcm0uYXNzaWduZWRfdG8pewogICAgICAgICAgICAgICAgdGhpcy4kZGlhbG9ncy5hbGVydChgUGxlYXNlIHNlbGVjdCBhIG1lZGljYWwgcGVyc29uZWxgKQogICAgICAgICAgICAgICAgICAgIC50aGVuKHJlcyA9PiBjb25zb2xlLmxvZyhyZXMpKQogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgIGNvbnN0IGFsbG9jYXRpb24gPSBtb2RlbEZhY3RvcnkuZ2V0KCdhbGxvY2F0aW9ucycpOwogICAgICAgICAgICAgICAgYWxsb2NhdGlvbi5hZGQodGhpcy5mb3JtKQogICAgICAgICAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRkaWFsb2dzLmFsZXJ0KGBQYXRpZW50IGFsbG9jYXRpb24gc3VjY2Vzc2Z1bGApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IGNvbnNvbGUubG9nKHJlcykpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBlcnIucmVzcG9uc2Uuc3RhdHVzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IGVyci5yZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRkaWFsb2dzLmFsZXJ0KG1lc3NhZ2Use3RpdGxlOnN0YXR1cywgc2l6ZToic20ifSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihyZXMgPT4gY29uc29sZS5sb2cocmVzKSkKICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCl7CiAgICAgICAgdGhpcy5nZXRVc2VycygpOwogICAgICAgIHRoaXMuZ2V0UGF0aWVudHMoKTsKICAgIH0KfQo="},{"version":3,"sources":["AllocationForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AllocationForm.vue","sourceRoot":"src/components/forms","sourcesContent":["<template>\n    <div>\n        <div class=\"card\">\n            <div class=\"card-header\">Allocate patient: <b>{{patient_first_name}} {{patient_last_name}}</b></div>\n            <div class=\"card-body\">\n                <form v-on:submit.prevent v-on:submit=\"allocate()\">\n                    <div class=\"form-group\">\n                        <label for=\"prioties\">Priorities:</label>\n                        <select id=\"priorities\" class=\"form-control\" v-model=\"form.priority\">\n                            <option v-for=\"(priority, id) in priorities\" :key=\"id\" :value=\"id\">{{priority}}</option>\n                        </select>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"example-datepicker\">Appointment Date</label>\n                        <b-form-datepicker id=\"example-datepicker\" v-model=\"form.allocation_date\" class=\"mb-2\"></b-form-datepicker>\n                    </div>\n                    <p/>\n                    <div class=\"selection_list\">\n                        <b>Select user:</b>\n                        <p/>\n                        <table class=\"table table-striped table-sm\">\n                        <thead>\n                            <tr>\n                            <th scope=\"col\">Assign</th>\n                            <th scope=\"col\">Username</th>\n                            <th scope=\"col\">Phonenumber</th>\n                            <th scope=\"col\">Role</th>\n                            <th scope=\"col\">Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"(user, id) in users\" :key=\"id\">\n                            <td> <input type=\"radio\" name=\"user\" @click=\"onPersonelChecked(user.id)\"/> </td>   \n                            <td>{{user.username}}</td>\n                            <td>{{user.email}}</td> \n                            <td>{{user.role_name}}</td>\n                            <td>{{user.status}}</td>\n                            </tr>\n                        </tbody>\n                        </table>\n                    </div>\n                    \n                    <button type=\"submit\" class=\"btn btn-primary\">Allocate</button>\n                </form>\n            </div>\n        </div>\n    </div>    \n</template>\n\n<script>\nimport modelFactory from \"@/services/resources/resourceFactory.js\";\n\nexport default {\n    name: \"AllocationForm\",\n    data(){\n        return {\n            form: {\n                assigned_to: 0,\n                priority: \"Normal\",\n                allocation_date: \"\",\n                patient_id: this.patient_id\n            },\n            priorities: {\n                \"Normal\" : \"Normal\",\n                \"Emergency\": \"Emergency\"\n            },\n            patients: [],\n            users: []\n        }\n    },\n    props: ['patient_id', 'patient_first_name', 'patient_last_name'],\n    methods:{\n        getUsers(){\n            const users = modelFactory.get('users');\n            users.index().then(response =>{\n                this.users = response.data.data\n            })\n        },\n        getPatients(){\n            const patients = modelFactory.get('patients');\n            patients.index().then(response => {\n                this.patients = response.data.data\n                console.log(this.patients);\n            }) \n        },\n        onPersonelChecked(id){\n            this.form.assigned_to = id\n        },\n        allocate(){\n            if (!this.form.assigned_to){\n                this.$dialogs.alert(`Please select a medical personel`)\n                    .then(res => console.log(res))\n            }else{\n                const allocation = modelFactory.get('allocations');\n                allocation.add(this.form)\n                        .then(response => {\n                            this.$dialogs.alert(`Patient allocation successful`)\n                                .then(res => console.log(res))\n                            console.log(response);\n                        }).catch(err => {\n                            const status = err.response.status;\n                            const message = err.response.data.data;\n                            this.$dialogs.alert(message,{title:status, size:\"sm\"})\n                                .then(res => console.log(res))\n                        })\n            }\n        }\n    },\n    mounted(){\n        this.getUsers();\n        this.getPatients();\n    }\n}\n</script>\n<style scoped>\n    .selection_list{\n        height: 250px;\n        overflow-y: scroll;\n        align-content: center;\n    }\n</style>"]}]}