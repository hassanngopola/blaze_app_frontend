{"remainingRequest":"/home/cranberry/Desktop/create/hsms-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cranberry/Desktop/create/hsms-client/src/components/forms/UserForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cranberry/Desktop/create/hsms-client/src/components/forms/UserForm.vue","mtime":1613115644887},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtb2RlbEZhY3RvcnkgZnJvbSAiQC9zZXJ2aWNlcy9yZXNvdXJjZXMvcmVzb3VyY2VGYWN0b3J5LmpzIjsKaW1wb3J0IHsgZW1haWwsIHJlcXVpcmVkLCBtaW5MZW5ndGggfSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnOwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiVXNlckZvcm0iLAogICAgZGF0YSgpewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGZvcm06IHsKICAgICAgICAgICAgICAgIGZpcnN0X25hbWU6ICIiLAogICAgICAgICAgICAgICAgbGFzdF9uYW1lOiAiIiwKICAgICAgICAgICAgICAgIHVzZXJuYW1lOiAiIiwKICAgICAgICAgICAgICAgIHBhc3N3b3JkOiAiIiwKICAgICAgICAgICAgICAgIGRhdGVfb2ZfYmlydGg6IiIsCiAgICAgICAgICAgICAgICBlbWFpbDogIiIsCiAgICAgICAgICAgICAgICByb2xlX2lkOiAwLAogICAgICAgICAgICAgICAgcm9sZXM6IFtdCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHJlc3BvbnNlRXJyb3JzOltdCiAgICAgICAgfQogICAgfSwKICAgIHZhbGlkYXRpb25zOiB7CiAgICAgICAgZm9ybTogewogICAgICAgICAgICBmaXJzdF9uYW1lIDogewogICAgICAgICAgICAgICAgcmVxdWlyZWQsCiAgICAgICAgICAgICAgICBtaW5MZW5ndGg6IG1pbkxlbmd0aCg0KQogICAgICAgICAgICB9LAogICAgICAgICAgICBsYXN0X25hbWUgOiB7CiAgICAgICAgICAgICAgICByZXF1aXJlZCwKICAgICAgICAgICAgICAgIG1pbkxlbmd0aDogbWluTGVuZ3RoKDQpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRhdGVfb2ZfYmlydGg6IHsKICAgICAgICAgICAgICAgIHJlcXVpcmVkCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICBlbWFpbDogewogICAgICAgICAgICAgICAgIHJlcXVpcmVkLAogICAgICAgICAgICAgICAgIGVtYWlsCiAgICAgICAgICAgICB9LAogICAgICAgICAgICAgdXNlcm5hbWU6IHsKICAgICAgICAgICAgICAgICByZXF1aXJlZCwKICAgICAgICAgICAgICAgICBtaW5MZW5ndGg6IG1pbkxlbmd0aCg0KQogICAgICAgICAgICB9LAogICAgICAgICAgICBwYXNzd29yZDogewogICAgICAgICAgICAgICAgcmVxdWlyZWQsCiAgICAgICAgICAgICAgICBtaW5MZW5ndGg6IG1pbkxlbmd0aCg4KQogICAgICAgICAgICB9CiAgICAgICAgfSAgICAKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgcmVnaXN0ZXIoKXsKICAgICAgICAgICAgdGhpcy4kdi4kdG91Y2goKQogICAgICAgICAgICBpZiAodGhpcy4kdi4kaW52YWxpZCkgeyAKICAgICAgICAgICAgICAgIHRoaXMuJGRpYWxvZ3MuYWxlcnQoIlBsZWFzZSBjb3JyZWN0IGVycm9ycyEiLHt0aXRsZTonRXJyb3InLCBzaXplOiJzbSJ9KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IGNvbnNvbGUubG9nKHJlcykpCiAgICAgICAgICAgICAgICByZXR1cm4gCiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uc3QgdXNlck1vZGVsID0gbW9kZWxGYWN0b3J5LmdldCgndXNlcnMnKTsKICAgICAgICAgICAgdXNlck1vZGVsLmFkZCh0aGlzLmZvcm0pCiAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRkaWFsb2dzLmFsZXJ0KGAke3RoaXMuZm9ybS51c2VybmFtZX0gaGFzIGJlZW4gcmVnaXN0ZXJlZCFgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IGNvbnNvbGUubG9nKHJlcykpCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBlcnIucmVzcG9uc2Uuc3RhdHVzOwogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlcyA9IGVyci5yZXNwb25zZS5kYXRhLmRhdGEgfHwge307CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJGRpYWxvZ3MuYWxlcnQobWVzc2FnZXMse3RpdGxlOnN0YXR1cywgc2l6ZToic20ifSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKHJlcyA9PiBjb25zb2xlLmxvZyhyZXMpKTsKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICBjb25zdCByb2xlTW9kZWwgPSBtb2RlbEZhY3RvcnkuZ2V0KCdyb2xlcycpOwogICAgICAgICAgICByb2xlTW9kZWwuaW5kZXgoKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICAgICB0aGlzLmZvcm0ucm9sZXMgPSByZXNwb25zZS5kYXRhLmRhdGEKICAgICAgICB9KTsKICAgIH0KfQo="},{"version":3,"sources":["UserForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserForm.vue","sourceRoot":"src/components/forms","sourcesContent":["<template>\n<div>\n    <div class=\"card\">\n    <div class=\"card-header\">\n        Register User    \n    </div>   \n    <div class=\"card-body\">\n        <form v-on:submit.prevent v-on:submit=\"register()\" >\n        \n        <div class=\"form-group\" :class=\"{ 'form-group--error': $v.form.first_name.$error }\">\n        <label for=\"first_name\">Firstname:</label>\n         <input type=\"text\" v-model.trim=\"$v.form.first_name.$model\" class=\"form__input form-control\" id=\"first_name\" placeholder=\"Enter Firstname\">\n         <small class=\"error\" v-if=\"!$v.form.first_name.required\">Field is required</small>\n         <small class=\"error\" v-if=\"!$v.form.first_name.minLength\">Firstname must have at least {{$v.form.first_name.$params.minLength.min}} letters.</small>\n        </div>\n\n        <div class=\"form-group\" :class=\"{ 'form-group--error': $v.form.last_name.$error }\">\n        <label for=\"last_name\">Lastname:</label>\n         <input type=\"text\" v-model.trim=\"$v.form.last_name.$model\" class=\"form__input form-control\" id=\"first_name\" placeholder=\"Enter Lastname\">\n         <small class=\"error\" v-if=\"!$v.form.last_name.required\">Field is required</small>\n         <small class=\"error\" v-if=\"!$v.form.last_name.minLength\">Lastname must have at least {{$v.form.last_name.$params.minLength.min}} letters.</small>\n        </div>\n\n        <div class=\"form-group\" :class=\"{ 'form-group--error': $v.form.username.$error }\">\n        <label for=\"username\">Username:</label>\n         <input type=\"text\" v-model.trim=\"$v.form.username.$model\" class=\"form__input form-control\" id=\"username\" placeholder=\"Enter username\">\n         <small class=\"error\" v-if=\"!$v.form.username.required\">Field is required</small>\n         <small class=\"error\" v-if=\"!$v.form.username.minLength\">Username must have at least {{$v.form.username.$params.minLength.min}} letters.</small>\n        </div>\n\n        <div class=\"form-group\" :class=\"{ 'form-group--error': $v.form.date_of_birth.$error }\">\n        <label for=\"date_of_birth\">Date of birth:</label>\n        <b-form-datepicker v-model.trim=\"$v.form.date_of_birth.$model\" id=\"example-datepicker\" class=\"mb-2\"></b-form-datepicker>\n        <small class=\"error\" v-if=\"!$v.form.date_of_birth.required\">Field is required</small>\n        </div>\n        \n        <div class=\"form-group\" :class=\"{'form-group--error': $v.form.email.$error }\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" v-model.trim=\"$v.form.email.$model\" class=\"form__input form-control\" id=\"email\" placeholder=\"Enter email\">\n        <small class=\"error\" v-if=\"!$v.form.email.email\">Invalid Email</small>\n        <small class=\"error\" v-if=\"!$v.form.email.required\">Field is required</small>\n        </div>\n\n        <div class=\"form-group\">\n        <label for=\"roles\">Role:</label>\n        <select id =\"roles\" v-model=\"form.role_id\" class=\"form__input form-control\" required> \n            <option v-for=\"role in form.roles\" :key=\"role.id\" :value=\"role.id\"> {{role.role_name}}</option>\n        </select>\n        </div>\n\n        <div class=\"form-group\" :class=\"{ 'form-group--error': $v.form.password.$error }\">\n        <label for=\"pwd\">Password:</label>\n        <input type=\"password\" v-model.trim=\"$v.form.password.$model\" class=\"form__input form-control\" placeholder=\"*******\" >\n        <small class=\"error\" v-if=\"!$v.form.password.required\">Field is required</small>\n        <small class=\"error\" v-if=\"!$v.form.password.minLength\">Password must have at least {{$v.form.password.$params.minLength.min}} letters.</small>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n        </form>\n        </div>\n    </div>\n</div>\n</template>\n<script>\nimport modelFactory from \"@/services/resources/resourceFactory.js\";\nimport { email, required, minLength } from 'vuelidate/lib/validators';\nexport default {\n    name: \"UserForm\",\n    data(){\n        return {\n            form: {\n                first_name: \"\",\n                last_name: \"\",\n                username: \"\",\n                password: \"\",\n                date_of_birth:\"\",\n                email: \"\",\n                role_id: 0,\n                roles: []\n            },\n            responseErrors:[]\n        }\n    },\n    validations: {\n        form: {\n            first_name : {\n                required,\n                minLength: minLength(4)\n            },\n            last_name : {\n                required,\n                minLength: minLength(4)\n            },\n            date_of_birth: {\n                required\n            },\n             email: {\n                 required,\n                 email\n             },\n             username: {\n                 required,\n                 minLength: minLength(4)\n            },\n            password: {\n                required,\n                minLength: minLength(8)\n            }\n        }    \n    },\n    methods: {\n        register(){\n            this.$v.$touch()\n            if (this.$v.$invalid) { \n                this.$dialogs.alert(\"Please correct errors!\",{title:'Error', size:\"sm\"})\n                            .then(res => console.log(res))\n                return \n            }\n            const userModel = modelFactory.get('users');\n            userModel.add(this.form)\n                    .then(response => {\n                        this.$dialogs.alert(`${this.form.username} has been registered!`)\n                            .then(res => console.log(res))\n                        console.log(response);\n                    }).catch(err => {\n                        const status = err.response.status;\n                        const messages = err.response.data.data || {};\n                        this.$dialogs.alert(messages,{title:status, size:\"sm\"})\n                               .then(res => console.log(res));\n                        \n                    })\n        }\n    },\n    mounted() {\n        const roleModel = modelFactory.get('roles');\n            roleModel.index().then(response => {\n                 this.form.roles = response.data.data\n        });\n    }\n}\n</script>"]}]}