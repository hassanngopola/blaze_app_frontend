{"remainingRequest":"/home/cranberry/Desktop/create/Blaze-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/cranberry/Desktop/create/Blaze-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cranberry/Desktop/create/Blaze-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cranberry/Desktop/create/Blaze-app/src/components/forms/PatientForm.vue?vue&type=template&id=54fb0709&","dependencies":[{"path":"/home/cranberry/Desktop/create/Blaze-app/src/components/forms/PatientForm.vue","mtime":1613115644887},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}