{"remainingRequest":"/home/cranberry/Desktop/create/Blaze-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cranberry/Desktop/create/Blaze-app/src/components/forms/PatientForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cranberry/Desktop/create/Blaze-app/src/components/forms/PatientForm.vue","mtime":1613115644887},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtb2RlbEZhY3RvcnkgZnJvbSAiQC9zZXJ2aWNlcy9yZXNvdXJjZXMvcmVzb3VyY2VGYWN0b3J5LmpzIjsKaW1wb3J0IHsgZW1haWwsIHJlcXVpcmVkLCBtYXhMZW5ndGgsIG1pbkxlbmd0aCwgbnVtZXJpYyB9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycyc7CmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJQYXRpZW50Rm9ybSIsCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZm9ybTogewogICAgICAgICAgICAgICAgZmlyc3RfbmFtZTogIiIsCiAgICAgICAgICAgICAgICBmYW1pbHlfbmFtZTogIiIsCiAgICAgICAgICAgICAgICBtaWRkbGVfbmFtZTogIiIsCiAgICAgICAgICAgICAgICBnZW5kZXI6ICJNYWxlIiwKICAgICAgICAgICAgICAgIGVtYWlsOiAiIiwKICAgICAgICAgICAgICAgIHBob25lX251bWJlcjogIiIsCiAgICAgICAgICAgICAgICBhZGRyZXNzOiAiIgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIHZhbGlkYXRpb25zOnsgICAgICAgIAogICAgICAgIGZvcm06ewogICAgICAgICAgICBlbWFpbDogewogICAgICAgICAgICAgICAgcmVxdWlyZWQsCiAgICAgICAgICAgICAgICBlbWFpbAogICAgICAgICAgICB9LAogICAgICAgICAgICBwaG9uZV9udW1iZXI6IHsKICAgICAgICAgICAgICAgIHJlcXVpcmVkLAogICAgICAgICAgICAgICAgbnVtZXJpYywKICAgICAgICAgICAgICAgIG1pbkxlbmd0aDogbWluTGVuZ3RoKDgpLAogICAgICAgICAgICAgICAgbWF4TGVuZ3RoOiBtYXhMZW5ndGgoMTUpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGZpcnN0X25hbWU6IHsKICAgICAgICAgICAgICAgIHJlcXVpcmVkLAogICAgICAgICAgICAgICAgbWluTGVuZ3RoOiBtaW5MZW5ndGgoNCkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZmFtaWx5X25hbWU6IHsKICAgICAgICAgICAgICAgIHJlcXVpcmVkLAogICAgICAgICAgICAgICAgbWluTGVuZ3RoOiBtaW5MZW5ndGgoNCkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYWRkcmVzczogewogICAgICAgICAgICAgICAgcmVxdWlyZWQKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOnsKICAgICAgICByZWdpc3RlcigpewogICAgICAgICAgICB0aGlzLiR2LiR0b3VjaCgpCiAgICAgICAgICAgIGlmICh0aGlzLiR2LiRpbnZhbGlkKSB7IAogICAgICAgICAgICAgICAgdGhpcy4kZGlhbG9ncy5hbGVydCgiUGxlYXNlIGNvcnJlY3QgZXJyb3JzISIse3RpdGxlOidFcnJvcicsIHNpemU6InNtIn0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihyZXMgPT4gY29uc29sZS5sb2cocmVzKSkKICAgICAgICAgICAgICAgIHJldHVybiAKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgY29uc3QgcmVnaXN0ZXIgPSBtb2RlbEZhY3RvcnkuZ2V0KCdwYXRpZW50cycpOwogICAgICAgICAgICByZWdpc3Rlci5hZGQodGhpcy5mb3JtKQogICAgICAgICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGF0aWVudE5hbWUgPSBgJHt0aGlzLmZvcm0uZmlyc3RfbmFtZX0gJHt0aGlzLmZvcm0uZmFtaWx5X25hbWV9YDsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kZGlhbG9ncy5hbGVydChgJHtwYXRpZW50TmFtZX0gaGFzIGJlZW4gcmVnaXN0ZXJlZCFgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IGNvbnNvbGUubG9nKHJlcykpCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBlcnIucmVzcG9uc2Uuc3RhdHVzOwogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gZXJyLnJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kZGlhbG9ncy5hbGVydChtZXNzYWdlLHt0aXRsZTpzdGF0dXMsIHNpemU6InNtIn0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihyZXMgPT4gY29uc29sZS5sb2cocmVzKSkKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["PatientForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PatientForm.vue","sourceRoot":"src/components/forms","sourcesContent":["<template>\n    <div>\n        <div class=\"card\">\n            <div class=\"card-header\">Register Patient </div>\n            <div class=\"card-body\">\n                <form v-on:submit.prevent v-on:submit=\"register()\">\n                    <div class=\"form-group\" :class=\"{ 'form-group--error': $v.form.first_name.$error }\">\n                    <label for=\"first_name\">Firstname:</label>\n                    <input type=\"text\" v-model.trim=\"$v.form.first_name.$model\" class=\"form__input form-control\" id=\"first_name\" placeholder=\"Enter First name\">\n                    <small class=\"error\" v-if=\"!$v.form.first_name.required\">Field is required</small> <br/>\n                    <small class=\"error\" v-if=\"!$v.form.first_name.minLength\">First name must have at least {{$v.form.first_name.$params.minLength.min}} letters.</small>\n                    </div>\n\n                    <div class=\"form-group\" :class=\"{ 'form-group--error': $v.form.family_name.$error }\">\n                    <label for=\"family_name\">Family name:</label>\n                    <input type=\"text\" v-model.trim=\"$v.form.family_name.$model\" class=\"form__input form-control\" id=\"first_name\" placeholder=\"Enter Family\">\n                    <small class=\"error\" v-if=\"!$v.form.family_name.required\">Field is required</small> <br/>\n                    <small class=\"error\" v-if=\"!$v.form.family_name.minLength\">Family name must have at least {{$v.form.family_name.$params.minLength.min}} letters.</small>\n                    </div>\n\n                    <div class=\"form-group\">\n                    <label for=\"gender\">Gender:</label>\n                    <select class=\"form-control\" v-model=\"form.gender\">\n                        <option>Male</option>\n                        <option>Female</option>\n                    </select>\n                    </div>\n\n                    <div class=\"form-group\" :class=\"{'form-group--error': $v.form.email.$error }\">\n                    <label for=\"email\">Email:</label>\n                    <input type=\"email\" v-model.trim=\"$v.form.email.$model\" class=\"form__input form-control\" id=\"email\" placeholder=\"Enter email\">\n                    <small class=\"error\" v-if=\"!$v.form.email.email\">Invalid Email</small> <br/>\n                    <small class=\"error\" v-if=\"!$v.form.email.required\">Field is required</small>\n                    </div>\n\n                    <div class=\"form-group\" :class=\"{'form-group--error': $v.form.phone_number.$error }\">\n                    <label for=\"phone\">Phone:</label>\n                    <input type=\"text\" v-model.trim=\"$v.form.phone_number.$model\" class=\"form__input form-control\" id=\"phone\" placeholder=\"Enter Phone\">\n                    <small class=\"error\" v-if=\"!$v.form.phone_number.numeric\">Please enter a numerical phone number!</small> <br/>\n                    <small class=\"error\" v-if=\"!$v.form.phone_number.required\">Field is required</small>\n                    <small class=\"error\" v-if=\"!$v.form.phone_number.minLength\">Phone number must be a minimum of {{$v.form.phone_number.$params.minLength.min}} </small><br/>\n                    <small class=\"error\" v-if=\"!$v.form.phone_number.maxLength\">Phone number must be greater than {{$v.form.phone_number.$params.maxLength.max}} </small>\n                    </div>\n\n                    <div class=\"form-group\" :class=\"{'form-group--error': $v.form.address.$error }\">\n                    <label for=\"address\">Address:</label>\n                    <input type=\"text\" v-model.trim=\"$v.form.address.$model\" class=\"form__input form-control\" id=\"address\" placeholder=\"Enter Address\">\n                    <small class=\"error\" v-if=\"!$v.form.address.required\">Field is required</small>\n                    </div>\n\n                    <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n                </form>\n            </div>\n        </div>\n    </div>    \n</template>\n<script>\nimport modelFactory from \"@/services/resources/resourceFactory.js\";\nimport { email, required, maxLength, minLength, numeric } from 'vuelidate/lib/validators';\nexport default {\n    name: \"PatientForm\",\n    data(){\n        return {\n            form: {\n                first_name: \"\",\n                family_name: \"\",\n                middle_name: \"\",\n                gender: \"Male\",\n                email: \"\",\n                phone_number: \"\",\n                address: \"\"\n            }\n        }\n    },\n    validations:{        \n        form:{\n            email: {\n                required,\n                email\n            },\n            phone_number: {\n                required,\n                numeric,\n                minLength: minLength(8),\n                maxLength: maxLength(15)\n            },\n            first_name: {\n                required,\n                minLength: minLength(4)\n            },\n            family_name: {\n                required,\n                minLength: minLength(4)\n            },\n            address: {\n                required\n            }\n        }\n    },\n    methods:{\n        register(){\n            this.$v.$touch()\n            if (this.$v.$invalid) { \n                this.$dialogs.alert(\"Please correct errors!\",{title:'Error', size:\"sm\"})\n                            .then(res => console.log(res))\n                return \n            }\n            \n            const register = modelFactory.get('patients');\n            register.add(this.form)\n                    .then(response => {\n                        const patientName = `${this.form.first_name} ${this.form.family_name}`;\n                        this.$dialogs.alert(`${patientName} has been registered!`)\n                            .then(res => console.log(res))\n                        console.log(response);\n                    }).catch(err => {\n                        const status = err.response.status;\n                        const message = err.response.data.data;\n                        this.$dialogs.alert(message,{title:status, size:\"sm\"})\n                            .then(res => console.log(res))\n                    })\n        }\n    }\n}\n</script>"]}]}