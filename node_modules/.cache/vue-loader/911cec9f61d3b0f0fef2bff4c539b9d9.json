{"remainingRequest":"/home/cranberry/Desktop/create/hsms-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cranberry/Desktop/create/hsms-client/src/views/Allocations.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cranberry/Desktop/create/hsms-client/src/views/Allocations.vue","mtime":1613115644891},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/hsms-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtb2RlbEZhY3RvcnkgZnJvbSAiQC9zZXJ2aWNlcy9yZXNvdXJjZXMvcmVzb3VyY2VGYWN0b3J5IjsKaW1wb3J0IEFsbG9jYXRpb24gZnJvbSAiQC9jb21wb25lbnRzL3RhYmxlcy9hbGxvY2F0aW9ucyI7CmltcG9ydCBuYXYgZnJvbSAiQC9jb21wb25lbnRzL2xheW91dC9Vc2VyTmF2YmFyIjsKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIkFsbG9jYXRpb25zIiwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICAnbmF2LWJhcic6IG5hdiwKICAgICAgICAnYWxsb2NhdGlvbnMtdGFibGUnIDogQWxsb2NhdGlvbgogICAgfSwKICAgIGRhdGEoKXsKICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgIGFsbG9jYXRpb25zOiBbXQogICAgICAgICB9CiAgICAgfSwKICAgICBtZXRob2RzOiB7CiAgICAgICAgIGdldEFsbG9jYXRpb25zKCl7CiAgICAgICAgICAgICBjb25zdCBhbGxvY2F0aW9ucyA9IG1vZGVsRmFjdG9yeS5nZXQoJ2FsbG9jYXRpb25zJyk7CiAgICAgICAgICAgICBhbGxvY2F0aW9ucy5pbmRleCgpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgIHRoaXMuYWxsb2NhdGlvbnMgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgICAgICAgICB9KTsKICAgICAgICAgfQogICAgIH0sCiAgICAgbW91bnRlZCgpewogICAgICAgICB0aGlzLmdldEFsbG9jYXRpb25zKCkKICAgICB9Cn0K"},{"version":3,"sources":["Allocations.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Allocations.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <nav-bar current-page=\"allocations\"></nav-bar> <p/>\n        <router-link :to=\"{path:`/allocations/add`}\"><div class=\"btn btn-primary btn-sm\">Add new</div></router-link>\n        <p/>\n        <allocations-table :items=\"allocations\"></allocations-table>\n        \n    </div>\n</template>\n<script>\nimport modelFactory from \"@/services/resources/resourceFactory\";\nimport Allocation from \"@/components/tables/allocations\";\nimport nav from \"@/components/layout/UserNavbar\";\nexport default {\n    name: \"Allocations\",\n    components: {\n        'nav-bar': nav,\n        'allocations-table' : Allocation\n    },\n    data(){\n         return {\n             allocations: []\n         }\n     },\n     methods: {\n         getAllocations(){\n             const allocations = modelFactory.get('allocations');\n             allocations.index().then(response => {\n                 this.allocations = response.data.data;\n             });\n         }\n     },\n     mounted(){\n         this.getAllocations()\n     }\n}\n</script>"]}]}