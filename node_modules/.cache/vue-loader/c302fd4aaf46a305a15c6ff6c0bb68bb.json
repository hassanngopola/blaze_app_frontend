{"remainingRequest":"/home/cranberry/Desktop/create/Blaze-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cranberry/Desktop/create/Blaze-app/src/components/tables/allocations.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cranberry/Desktop/create/Blaze-app/src/components/tables/allocations.vue","mtime":1613115644887},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cranberry/Desktop/create/Blaze-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJBbGxvY2F0aW9ucyIsCiAgICBwcm9wczogewogICAgICAgIGl0ZW1zOiB7CiAgICAgICAgICAgIHR5cGU6IEFycmF5CiAgICAgICAgfQogICAgfSwgCiAgICBtZXRob2RzOiB7CiAgICAgICAgc2V0TmV3RW5jb3VudGVyKGFsbG9jYXRpb25faWQsIHBhdGllbnRfaWQsIHBhdGllbnRfZmlyc3RfbmFtZSwgcGF0aWVudF9sYXN0X25hbWUpewogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3N0YXJ0UGF0aWVudEVuY291bnRlcicsIHsKICAgICAgICAgICAgICAgIGFsbG9jYXRpb25faWQ6YWxsb2NhdGlvbl9pZCwgCiAgICAgICAgICAgICAgICBwYXRpZW50X2lkOiBwYXRpZW50X2lkLAogICAgICAgICAgICAgICAgcGF0aWVudF9maXJzdF9uYW1lOiBwYXRpZW50X2ZpcnN0X25hbWUsCiAgICAgICAgICAgICAgICBwYXRpZW50X2xhc3RfbmFtZTogcGF0aWVudF9sYXN0X25hbWUsICAgICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7cGF0aDoiL2VuY291bnRlcnMvYWRkIn0pOwogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["allocations.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"allocations.vue","sourceRoot":"src/components/tables","sourcesContent":["<template>\n    <div>\n    <table class=\"table\">\n    <thead>\n        <tr>\n        <th scope=\"col\">Patient</th>\n        <th scope=\"col\">Doctor</th>\n        <th scope=\"col\">Priority</th>\n        <th scope=\"col\">Date</th>\n        <th scope=\"col\">Options</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr v-for=\"(allocation, id) in items\" :key=\"id\">\n        <td>{{allocation.first_name}} {{allocation.family_name}}</td>\n        <td>{{allocation.user_assigned_to}}</td>\n        <td>{{allocation.priority}}</td> \n        <td> {{allocation.allocation_date}}</td>\n        <td>\n         <button @click=\"setNewEncounter(\n                allocation.id, allocation.patient_id, allocation.first_name, \n                allocation.family_name\n                )\" \n                class=\"btn btn-outline-primary btn-sm\">\n                New Encounter\n            </button>\n        </td>\n        </tr>\n    </tbody>\n    </table>\n    </div>\n</template>\n<script>\nexport default {\n    name: \"Allocations\",\n    props: {\n        items: {\n            type: Array\n        }\n    }, \n    methods: {\n        setNewEncounter(allocation_id, patient_id, patient_first_name, patient_last_name){\n            this.$store.commit('startPatientEncounter', {\n                allocation_id:allocation_id, \n                patient_id: patient_id,\n                patient_first_name: patient_first_name,\n                patient_last_name: patient_last_name,               \n            });\n            this.$router.push({path:\"/encounters/add\"});\n        }\n    }\n}\n</script>"]}]}